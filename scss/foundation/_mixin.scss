@use "variables";

//---レスポンシブ用（pcは初期値）---//
@mixin media($breakpoint: pc) {
    @media #{map-get(variables.$breakpoints, $breakpoint)} {
        @content;
    }
}

//font
@mixin fontRed {
    font-family: 'Shippori Mincho', serif;
    color: variables.$red;
}
@mixin mainFont {
    font-family: 'Shippori Mincho', serif;
    color: variables.$mainColor;
}
@mixin mainRed {
   font-family: 'Shippori Mincho', serif;
   color: variables.$mainRed;
}

@mixin fontWhite {
    font-family: 'Shippori Mincho', serif;
    color: variables.$white;
}

//animation
@mixin animation(
   //初期値
  $name,
  $duration: 1s,
  $timing-function: ease,
  $delay: 0s,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: forwards
) {
   //プロパティのネスト記法
  animation: {
    name: $name;
    duration: $duration;
    timing-function: $timing-function;
    delay: $delay;
    iteration-count: $iteration-count;
    direction: $direction;
    fill-mode: $fill-mode;
  }
}

@mixin skill-term-off {
   dt {
      opacity: 0;
      transform: translateY(100px);
   }
   dd {
      
      opacity: 0;
      transform: translateY(100px);
   }
   
}

@mixin skill-term-on {
   dt {
      transition: all 1s;
      transform: translateY(0);
      opacity: 1;
   }
   dd {
      transition: all 1s;
      transition-delay: 0.5s;
      transform: translateY(0);
      opacity: 1;
   }
}

